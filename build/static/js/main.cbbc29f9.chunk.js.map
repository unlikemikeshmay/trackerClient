{"version":3,"sources":["actions/index.js","reducers/index.js","reducers/usersReducer.js","reducers/isAuthenticatedReducer.js","reducers/tokenReducer.js","reducers/loginReducer.js","apis/api.js","components/Home.js","components/Header.js","components/Login.js","components/App.js","index.js"],"names":["jwt","combineReducers","users","state","action","type","payload","Authenticated","login","axios","create","baseURL","setLogin","email","password","dispatch","getState","a","loginUser","setValidation","console","log","api","post","headers","response","data","decoded","jwt_decode","fetchJWT","get","Home","className","this","renderPostsList","Component","connect","Header","props","Dropdown","text","Menu","user","Item","onClick","killSession","useState","setEmail","setPassword","useEffect","Grid","textAlign","style","height","verticalAlign","Column","maxWidth","as","color","Form","size","Segment","stacked","Input","value","fluid","icon","iconPosition","placeholder","onChange","e","target","Button","preventDefault","update","exp","submitLoginCreds","App","flag","auth","disableFlag","bind","updateState","thing","setState","path","component","Login","React","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.cbbc29f9.chunk.js","sourcesContent":["import api from '../apis/api';\nimport jwt_decode from 'jwt-decode';\nvar jwt;\nconst shoutOut = () => {\nconsole.log(` shoutout: ${jwt}`)\n}\n\nexport const fetchUsers = id => async dispatch => {\n    const response = await api.get('/users');\n    dispatch({type:'FETCH_USERS',payload:response})\n}\nexport const setLogin = (email,password) => async (dispatch, getState) => {\n // console.log(`email: ${email}, passord: ${password}`)\n await dispatch(loginUser(email,password))\n\nawait dispatch(setValidation(getState().login))\n\n} \nexport const loginUser = (email, password) => async dispatch => {\n  console.log(`email inside login user: ${email}, passord: ${password}`)\n  const response = await api.post('/login',{\n      email:email,\n      password:password,\n      \n    headers: {\n      \"Content-Type\": \"application/x-www-form-urlencoded\"\n    }\n  });\n  jwt = response.data\n // console.log(`jwt inside login user ${jwt}`)\nshoutOut(response.data)\n  dispatch({type:'LOGIN_USER',payload: response.data})\n}\nexport const setValidation = jwt => async dispatch => {\n  if (jwt == \"user doesn't exist:\"){\n    \n    dispatch({type:'SET_AUTH',payload: jwt})\n  }else {\n    var decoded = jwt_decode(jwt);\n    console.log(decoded)\n    dispatch({type:'SET_AUTH',payload: decoded})\n  }\n   \n}\nexport const fetchJWT = () => async dispatch => {\n    const response = await api.get('/get-token');\n    dispatch({type:'FETCH_JWT',payload:response.data});\n}\nexport const validate = () => async (dispatch, getState) => {\n  await dispatch(fetchJWT())\n  var key = getState().jwt\n  const response = await api.get('/validate',{\n    headers: {\n      'Authorization': key\n    }\n  });\n  console.log(`validate: ${key}, response: ${response.data}`)\n  dispatch({type:'VALIDATE_KEY',payload:response.data})\n}\n","import { combineReducers } from \"redux\";\n\nimport usersReducer from './usersReducer';\n\nimport tokenReducer from './tokenReducer';\nimport isAuthenticatedReducer from \"./isAuthenticatedReducer\";\nimport loginReducer from './loginReducer';\n\nexport default combineReducers({\n    users: usersReducer,\n  \n    Authenticated: isAuthenticatedReducer,\n    jwt: tokenReducer,\n    login: loginReducer\n});\n","export default (state = [],action) => {\n    switch (action.type) {\n        case 'FETCH_USERS':\n            return action.payload\n\n        default:\n            return state;\n    }\n}","export default (state = {},action) => {\n    switch (action.type) {\n        case 'SET_AUTH':\n          return action.payload;\n            \n    \n        default:\n            return state;\n            \n    }  \n  };","export default (state = \"\",action) => {\n  switch (action.type) {\n      case 'FETCH_JWT':\n        return action.payload;\n          \n  \n      default:\n          return state;\n          \n  }  \n};","export default (state = [],action) => {\n    switch (action.type) {\n        case 'LOGIN_USER':\n          return action.payload;\n            \n    \n        default:\n            return state;\n            \n    }  \n  };","import axios from 'axios';\n\nexport default axios.create({\n\n        baseURL: \"https://safe-sands-61399.herokuapp.com\"\n           \n})\n// dev\n/* export default axios.create({\n\n        baseURL: \"http://127.0.0.1:9001\"\n        \n           \n}) */","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\nimport {fetchJWT} from '../actions';\n\nclass Home extends Component {\n    componentDidMount(){\n    //    this.props.fetchJWT();\n    }\n    renderPostsList(){\n        return (\n            <div>hi</div>\n        )\n}\nrender(){\n\n  return <div className=\"ui relaxed divided list\">{this.renderPostsList()}</div>;\n}\n}\n\nconst mapStateToProps = (state) => {\n    return {jwt: state.jwt}\n}\nexport default connect(mapStateToProps,{fetchJWT})(Home);","import React from 'react';\nimport { Dropdown } from 'semantic-ui-react';\n\nconst Header = (props) => {\n    return (\n        <div className=\"ui small menu\">\n        <p className=\"active item\">\n          Home\n        </p>\n        <p className=\"item\">\n          Tools\n        </p>\n        <p className=\"item\">\n          Users\n        </p>\n        <p className=\"item\">\n          Lookup\n        </p>\n        \n        <div className=\"right menu\">\n          <Dropdown className=\"ui dropdown item\" text=\"...\">\n              <Dropdown.Menu>\n              <p> {props.user}</p>\n                  <Dropdown.Item text=\"Add User\"/>\n                  <Dropdown.Item text=\"Add Tool\"/>\n                  <Dropdown.Item text=\"Print\"/>\n              </Dropdown.Menu>\n          </Dropdown>\n          <div className=\"item\">\n              <div onClick={() => props.killSession()} className=\"ui  button\">Sign Out</div>\n          </div>\n        </div>\n        \n      </div>\n    )\n}\nexport default Header;","import React , {useState,useEffect} from 'react'\nimport { Button, Form, Grid, Header, Segment } from 'semantic-ui-react'\nimport { connect } from 'react-redux';\nimport {setLogin,setValidation} from '../actions'\nimport _ from 'lodash';\n\nconst LoginForm = (props) => {\n\nconst [email,setEmail] = useState('');\nconst [password, setPassword] = useState('');\nconst submitLoginCreds = (e) => {\n  e.preventDefault();\n // console.log(`email: ${email}, password: ${password}`)\n  if(email != \"\" && password != \"\"){\n     props.setLogin(email,password)\n  \n    //add restriction code\n    console.log(`props.Authenticated inside login: ${props.Authenticated.user}`)\n    //if auth is set\n    if (email == props.Authenticated.user){\n      console.log(\"update app\");\n      console.log(`state user: ${email}, props.Authenticated.user: ${props.Authenticated.user}`)\n      props.update(props.Authenticated.exp);\n    }\n    \n  }else {\n    console.log('not set')\n  }\n \n  setEmail(\"\")\n  setPassword(\"\")\n\n\n}\nuseEffect(() => {\n\n},[email])\n\nreturn (\n  <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n  <Grid.Column style={{ maxWidth: 450 }}>\n  <Header as='h1' color='black' textAlign='center'>\n     Tracker\n    </Header>\n    <Header as='h2' color='teal' textAlign='center'>\n      {/* <Image src='/logo.png' /> */} Log-in to your account \n    </Header>\n    <Form size='large'>\n      <Segment stacked>\n        <Form.Input \n        value={email}  \n        fluid icon='user' \n        iconPosition='left' \n        \n        placeholder='E-mail address'\n        onChange={(e) => setEmail(e.target.value)} \n        />\n        <Form.Input\n          fluid\n          icon='lock'\n          iconPosition='left'\n          placeholder='Password'\n          type='password'\n          value={password}\n          \n          onChange={(e) => setPassword(e.target.value)}\n        />\n\n        <Button onClick={(e) => submitLoginCreds(e)} color='teal' fluid size='large'>\n          Login\n        </Button>\n      </Segment>\n    </Form>\n   \n  </Grid.Column>\n</Grid>\n)\n \n}\nconst mapStateToProps = (state) => {\n  return {\n    login: state.login,\n    Authenticated: state.Authenticated\n\n  }\n}\nexport default connect(mapStateToProps,{setLogin,setValidation})( LoginForm);","import React from 'react';\nimport {BrowserRouter,Route} from 'react-router-dom';\nimport {setValidation,setLogin} from '../actions';\nimport _ from 'lodash';\n\n\nimport Home from './Home';\nimport Header from './Header';\nimport Login from './Login';\nimport { connect } from 'react-redux';\n\n// if validate recieves \"Token is expired\" destroy tokens in memory and block routes\n//expired token example\n/* eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdXRob3JpemVkIjp0cnVlLCJleHAiOjE2MTMwNjIwMDgsInVzZXIiOiJtaWtlIGpheSJ9.e2g2JaqMHM_1BFjNPXnfnJOz6XrBffbHE10PxXYHp3A */\n/* TODO::: dont forget to configure backend to redirect all incoming traffic to return index.html */\n\nclass App extends React.Component  {\n    constructor(props) {\n        super(props);\n        this.state = {flag: false,auth:null};\n\n        this.disableFlag = this.disableFlag.bind(this)\n        this.updateState = this.updateState.bind(this)\n      }\nupdateState(thing){\nconsole.log(`flag before ${this.state.flag}`)\n  this.setState({\n      auth: thing,\n      flag:true\n  })\n  console.log(`flag after ${this.state.flag}`)\n}\ndisableFlag(){\n    this.setState(\n        {\n            auth: null,\n            flag: false\n        }\n    )\n}\ncomponentDidMount(){\n   // console.log(`this.state.auth: ${this.state.auth}`)\n\n\n}\n    //if (Object.keys(obj).length === 0) { // handle empty obj }\n   \n \n    render(){\n\n        return (\n            <div className=\"ui container\">\n              \n                <BrowserRouter>\n               \n               {this.state.flag ? <div> <Header killSession={this.disableFlag} user={this.props.Authenticated.user}/>\n                <div>\n                    \n                    <Route path=\"/\" component={Home}/>\n                </div></div> : <div><Login update={this.updateState}/> </div>}\n                </BrowserRouter>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return { \n        Authenticated: state.Authenticated,\n        jwt: state.jwt,\n        login:state.login\n    }\n}\nexport default connect(mapStateToProps,{setValidation,setLogin})(App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {createStore, applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\n\nimport 'semantic-ui-css/semantic.min.css';\n\n\nimport reducers from './reducers';\nimport App from './components/App';\n\nconst store = createStore(reducers,applyMiddleware(thunk));\n\nReactDOM.render(\n    <Provider store={store}>\n  <App/>\n    </Provider>,\n    document.querySelector(\"#root\")\n);"],"sourceRoot":""}